<div class="container mt-[83px]">
    <div>
        <!-- Breadcumbs -->
        <div class="breadcrumbs text-sm mb-5">
            <ul>
                <li><a href="/">Trang chủ</a></li>
                <li><a href="/product">Danh sách sản phẩm</a></li>
                <li><%= product ? product.tenSanPham : "Unknown Name" %></li>
            </ul>
        </div>
    </div>
    <div class="grid grid-cols-12 mt-5 gap-10">
        <section class="col-span-7">
            <div class="swiper swiper-product-images [&_.swiper-slide]:rounded-2xl">
                <div class="swiper-wrapper h-[500px]">
                    <% if (product && product.danhSachHinhAnh.length > 0) { %>
                        <% product.danhSachHinhAnh.forEach((image, index) => { %>
                            <div class="swiper-slide">
                                <img
                                    class="object-cover h-full w-full rounded-2xl"
                                    src="<%= image %>"
                                    alt=""
                                />
                            </div>
                        <% }) 
                    } %>
                </div>
                <div class="swiper-button-next"></div>
                <div class="swiper-button-prev"></div>
          </section>

        <section class="col-span-5">
             <div>
                  <h1 class="text-3xl font-bold"><%= product ? product.tenSanPham : "Unknown Name" %></h1>
                   <% if (dataReview && dataReview.reviews.length > 0) { %>
                        <div class="flex items-center mb-2">
                            <% const roundedRating = Math.round(dataReview.averageRating); %>
                                <% for (let i = 0; i < 5; i++) { %>
                                   <svg class="w-4 h-4 <%= i < roundedRating ? 'text-yellow-400' : 'text-gray-300 dark:text-gray-500' %> me-1" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="currentColor" viewBox="0 0 22 20">
                                        <path d="M20.924 7.625a1.523 1.523 0 0 0-1.238-1.044l-5.051-.734-2.259-4.577a1.534 1.534 0 0 0-2.752 0L7.365 5.847l-5.051.734A1.535 1.535 0 0 0 1.463 9.2l3.656 3.563-.863 5.031a1.532 1.532 0 0 0 2.226 1.616L11 17.033l4.518 2.375a1.534 1.534 0 0 0 2.226-1.617l-.863-5.03L20.537 9.2a1.523 1.523 0 0 0 .387-1.575Z"></path>
                                    </svg>
                                <% } %>
                        <p class="ms-1 text-sm font-medium text-black "><%= dataReview.averageRating %></p>
                        <p class="ms-1 text-sm font-medium text-black ">|</p>
                        <p class="ms-1 text-sm font-medium text-black "><%= dataReview.reviews.length %><span class="dark:text-gray-500 text-gray-500"> Đánh giá</span></p>
                    </div>
                    <% } %>
        
                <p class="mt-2 text-gray-500"><%= product ? product.moTaSanPham : "Unknown Description" %></p>

                <div class="mt-7">
                    <h2 class="text-base font-semibold mb-2">Danh mục</h2>
                    <div class="flex items-center gap-2">
                        <% product.danhSachDanhMuc.forEach(category => { %>
                            <span class="badge badge-ghost badge-md"><%= category.tenDanhMuc %></span>
                        <% }) %>
                    </div>
                </div>

                <div class="mt-7">
                    <h2 class="text-base font-semibold mb-2">Kích cỡ</h2>
                    <div id="size-list" class="grid grid-cols-4 gap-3">
                        
                        <% if (product && product.danhSachKichCo.length > 0) { %>
                            <% product.danhSachKichCo.forEach((size, index) => { %>

                                <% 
                                    const finalPrice = size.giaKichCo - discountValue > 0
                                        ? size.giaKichCo - discountValue
                                        : 0;
                                %>

                                <button 
                                    data-sizeQuantity="<%= size.soLuongKichCo %>" 
                                    data-sizePrice="<%= finalPrice > 0 ? finalPrice : size.giaKichCo %>" 
                                    data-sizeId="<%= size.maKichCo.maKichCo%>" 
                                    <%= size.soLuongKichCo === 0 ? 'disabled' : '' %>
                                    class="disabled:opacity-60 disabled:cursor-not-allowed cursor-pointer text-center border p-2 rounded-xl">
                                        <p class="font-semibold mb-2"><%= size.maKichCo.tenKichCo %></p>

                                        <% if (discountValue > 0) { %>
                                            <span class="line-through text-sm text-gray-400">
                                                <%= formatVNCurrency(size.giaKichCo) %>
                                            </span>
                                            <span class="text-primary font-bold">
                                                <%= formatVNCurrency(finalPrice) %>
                                            </span>
                                            
                                        <% } else { %>
                                            <span>
                                                <%= formatVNCurrency(size.giaKichCo) %>
                                            </span>
                                        <% } %>
                                </button>
                            <% }) 
                        } %>
                    </ul>
                </div>

                <div class="mt-7">
                    <h2 class="text-base font-semibold mb-2">Chọn số lượng ( Vui lòng chọn kích cỡ trước )</h2>
                    <div class="flex items-center h-[50px] text-neutral-700">
                        <button class="w-[50px] h-full border rounded-tl-xl rounded-bl-xl decrease decrease-btn">
                            <i class='bx bx-minus'></i>
                        </button>
                        <div class="inline-flex justify-center items-center w-[50px] h-full border-t border-b quantity-select-value">
                            1
                        </div>
                        <button class="w-[50px] h-full border rounded-tr-xl rounded-br-xl increase increase-btn">
                            <i class='bx bx-plus'></i>
                        </button>
                    </div>
                </div>

                <p class="mt-5">
                    <span class="text-base font-semibold">Giá mua:</span> &nbsp;
                    <span id="order-price" class="text-xl font-bold text-primary ">
                        0 đ
                    </span>
                </p>

                <div>
                    <button 
                        data-productId="<%= product ? product.maSanPham : '' %>"
                        data-loginUrl="<%= loginUrl %>" 
                        id="add-to-cart-btn" 
                        disabled 
                        class="disabled:opacity-70 disabled:cursor-not-allowed mt-7 w-full bg-primary text-white py-3 rounded-full font-semibold">
                       
                        <i id="add-to-cart-loader" class='animate-spin hidden bx bx-loader-alt'></i>
                        <span class="ms-2">Thêm vào giỏ hàng</span>
                    </button>
                </div>
            </div>
        </section>
    </div>
    <div class="mt-7"></div>
        <h2 class="text-base font-semibold mb-2">Đánh giá</h2>
        <div class="reviews">
            <% if (dataReview && dataReview.reviews.length > 0) { %>
                <% dataReview.reviews.forEach(review => { %>
                    <div class="review mb-4 p-4 border rounded-xl">
                        <div class="flex items-center mb-2">
                            <img class="w-8 h-8 rounded-full mr-2" src="<%= review.maKhachHang.anhDaiDien %>" alt="<%= review.maKhachHang.tenKhachHang %>">
                            <span class="font-semibold"><%= review.maKhachHang.tenKhachHang %></span>
                            <span class="ml-2 text-sm text-gray-500"><%= new Date(review.ngayDanhGia).toLocaleDateString() %></span>
                        </div>
                        <div class="rating mb-2">
                            <% for (let i = 0; i < 5; i++) { %>
                                <i class="bx <%= i < review.soDiem ? 'bxs-star' : 'bx-star' %> text-yellow-500"></i>
                            <% } %>
                        </div>
                        <p class="text-gray-700"><%= review.noiDungDanhGia %></p>
                    </div>
                <% }) %>
            <% } else { %>
                <p class="text-gray-500">Chưa có đánh giá nào.</p>
            <% } %>
        </div>
    </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/swiper@11/swiper-bundle.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/toastify-js"></script>
<script>
    var swiper = new Swiper(".swiper-product-images", {
        navigation: {
            nextEl: ".swiper-button-next",
            prevEl: ".swiper-button-prev",
        },
    });
</script>
<script>
    document.addEventListener("DOMContentLoaded", () => {
        const increaseBtn = document.querySelectorAll('.increase-btn')
        const decreaseBtn = document.querySelectorAll('.decrease-btn')
        const selectedQuantity = document.querySelectorAll('.quantity-select-value')

        const sizeList = document.getElementById('size-list')
        const sizeItems = sizeList.querySelectorAll('button')

        const orderPrice = document.getElementById('order-price')

        const addToCartBtn = document.getElementById('add-to-cart-btn')
        const addToCartLoader = document.getElementById('add-to-cart-loader')

        let selectedSizeQuantity = 0;
        let selectedSizePrice = 0;
        let selectedSizeId = null;

        const renderSizePrice = (quantity) => {
            orderPrice.innerHTML = formatVNCurrency(selectedSizePrice * quantity)
        }

        increaseBtn.forEach(btn => {
            btn.onclick = function () {
                selectedQuantity.forEach(selectValue => {
                   // Check if selected quantity is greater than size quantity
                    if (selectValue.innerHTML >= selectedSizeQuantity) {
                        return
                    }
                    selectValue.innerHTML++;

                    renderSizePrice(Number(selectValue.innerHTML));
                })
            }
        })

        decreaseBtn.forEach(btn => {
            btn.onclick = function () {
                selectedQuantity.forEach(selectValue => {
                    if (selectValue.innerHTML > 1) {
                        selectValue.innerHTML--
                        renderSizePrice(Number(selectValue.innerHTML));
                    }
                })
            }
        })

        const formatVNCurrency = (value) => {
            return value.toLocaleString("vi-VN", {
                style: "currency",
                currency: "VND",
            });
        };
       
        // Size items event listener
        sizeItems.forEach(item => {
            item.addEventListener("click", (event) => {
                sizeItems.forEach(item => {
                    item.classList.remove('border-primary')
                })
                item.classList.add('border-primary')

                selectedSizeQuantity = Number(item.getAttribute('data-sizeQuantity'))
                selectedSizePrice = Number(item.getAttribute('data-sizePrice'))
                selectedSizeId = item.getAttribute('data-sizeId')
                
                renderSizePrice(Number(selectedQuantity[0].innerHTML));
                
                // Remove disabled attribute from button
                addToCartBtn.removeAttribute('disabled')
            })
        })

        // Add to cart button event listener
        addToCartBtn.addEventListener('click', async function () {
            // const loginURL = this.getAttribute('data-loginUrl')

            // if (loginURL) {
            //     window.location.href = loginURL;
            //     return;
            // }

            const quantity = Number(selectedQuantity[0].innerHTML)
            const productId = this.getAttribute('data-productId')

            const body = {
                productId: productId,
                sizeId: selectedSizeId,
                quantity: quantity,
                selectedPrice: selectedSizePrice
            }

            try {

                addToCartLoader.classList.remove('hidden')
                
                const response = await fetch("/cart/api/add", {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(body)
                });
                const data = await response.json();

                if (response.ok) {
                    // Reset quantity to 1
                    selectedQuantity.forEach(selectValue => {
                        selectValue.innerHTML = 1
                    })

                    // Update cart badge
                    const cartIcon = document.getElementById("cart-icon");
                    const cartBadge = cartIcon.querySelector("span");

                    const response = await fetch("/cart/api/total", {
                        method: "GET",
                        credentials: "include"  // Đảm bảo cookie hoặc thông tin xác thực được gửi
                    });

                    if (!response.ok) {
                        return;
                    }

                    const data = await response.json();
                    const totalItems = data?.totalItems;
                    
                    // Render total items and if greater than 99, show 99+
                    if (totalItems > 99) {
                        cartBadge.innerText = "99+";
                    } else {
                        cartBadge.innerText = totalItems;
                    }

                    Toastify({
                      text: "Sản phẩm đã được thêm vào giỏ hàng thành công!",
                      duration: 3000, 
                      gravity: "bottom", 
                      position: "right",
                      style: {
                        background: "#45D483"
                      },
                      close: false, 
                    }).showToast();
                } else {
                    Toastify({
                      text: "Đã xảy ra lỗi khi thêm sản phẩm vào giỏ hàng!",
                      duration: 3000,
                      gravity: "bottom",
                      position: "right",
                      style: {
                        background: "#F54180", 
                        color: "#FFFFFF" 
                      },
                      close: false,
                    }).showToast();
                }

                addToCartLoader.classList.add('hidden')
            } catch (error) {
                console.log("error: ", error);
                Toastify({
                  text: "Đã xảy ra lỗi khi thêm sản phẩm vào giỏ hàng!",
                  duration: 3000,
                  gravity: "bottom",
                  position: "right",
                  style: {
                    background: "#F54180", 
                    color: "#FFFFFF" // Màu chữ trắng
                  },
                  close: false,
                }).showToast();
            } finally {
                addToCartLoader.classList.add('hidden')
            }
        })

    })
</script>
